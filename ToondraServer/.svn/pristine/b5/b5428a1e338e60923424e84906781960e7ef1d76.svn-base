package kr.co.toondra.web.author.controller;


import javax.servlet.http.HttpServletRequest;


import kr.co.toondra.common.collection.PMap;
import kr.co.toondra.web.author.service.AuthorService;
import kr.co.toondra.base.controller.BaseController;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;

@RequestMapping(value="/admin/author")
@Controller
public class AuthorController extends BaseController {
		
	@Autowired
	AuthorService service = new AuthorService();
	
	@RequestMapping(value="/authorListView")
	public String authorListView(HttpServletRequest request){
		logger.debug("[ST][/authorListView]");
		logger.debug("[ED][/authorListView]");
		
		return "toondra/author/authorListView";
	}
	
	@RequestMapping(value="/authorList")
	public String authorList(HttpServletRequest request, Model model){
		logger.debug("[ST][/authorList]");
		PMap pMap = new PMap(request);
		pMap = service.authorList(pMap);
		model.addAllAttributes(pMap);
		logger.debug("[ED][/authorList]");
		
		return "jacksonView";
	}
	
	@RequestMapping(value="/insertView")
	public String authorCreateView(HttpServletRequest request) {
		logger.debug("[ST][/authorCreateView]");
		logger.debug("[ED][/authorCreateView]");
		
		return "toondra/author/authorInsert";
	}
	
	@RequestMapping(value="/insertAuthor")
	public String insertAuthor(HttpServletRequest request, Model model) {
		logger.debug("[ST][/authorCreate]");
		PMap pMap = new PMap(request);
		pMap = service.insertAuthor(pMap);
		model.addAttribute("result", pMap.get("result"));
		logger.debug("[ED][/authorCreate]");
		
		return "toondra/author/authorInsert";
	}
	
	@RequestMapping(value="/idCheck")
	public String idCheck(HttpServletRequest request, Model model){
		logger.debug("[ST][/idCheck]");
		model.addAllAttributes(service.idCheck(new PMap(request)));
		logger.debug("[ED][/idCheck]");
		
		return "jacksonView";
	}
	
	@RequestMapping(value="/popup/postPopup")
	public String postPopup(HttpServletRequest request,Model model) {
		logger.debug("[ST][/postPopup]");
		model.addAllAttributes(new PMap(request));
		logger.debug("[ED][/postPopup]");
		
		return "toondra/popup/postApiPopup";
	}
	
	@RequestMapping(value="/authorDetail")
	public String getAuthor(HttpServletRequest request, Model model) {
		logger.debug("[ST][/getAuthor]");
		PMap pMap = new PMap(request);
		pMap = service.getAuthor(pMap);
		model.addAllAttributes(pMap);
		logger.debug("[ED][/getAuthor]");
		
		return "toondra/author/authorUpdate";
	}
	
	@RequestMapping(value="/updateAuthor")
	public String updateAuthor(HttpServletRequest request, Model model) {
		logger.debug("[ST][/updateAuthor]");
		PMap pMap = new PMap(request);
		pMap = service.updateAuthor(pMap);
		model.addAllAttributes(pMap);
		logger.debug("[ED][/updateAuthor]");
		
		return "toondra/author/authorUpdate";
	}
	
	@RequestMapping(value="/deleteAuthor")
	public String deleteAuthor(HttpServletRequest request,Model model) {
		logger.debug("[ST][/deleteAuthor]");
		PMap pMap = new PMap(request);
		service.deleteAuthor(pMap);
		logger.debug("[ED][/deleteAuthor]");
		
		return "toondra/author/authorListView";
	}
	
}
