package kr.co.toondra.api.image.service;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

import kr.co.toondra.api.image.dao.ImageDao;
import kr.co.toondra.common.collection.PMap;

@Service
public class ImageService {

	@Value("${file.root_path}")
	String ROOT_PATH;

	@Autowired
	ImageDao dao = new ImageDao();

	public PMap getThumbnail(PMap pMap) {
		
		FileInputStream fi = null;
		ByteArrayOutputStream bo = null;
		byte[] fileArray = null;
		String type = "";
		try{
			File file;
			String thumbnail = dao.getThumbnail(pMap).get("thumbnail_img_name");
			String thumbnailPath = ROOT_PATH+"/"+ pMap.get("work_seq") +"/"+thumbnail;
			type = thumbnail.substring(thumbnail.lastIndexOf("."));
			type = type.toLowerCase();
			file = new File(thumbnailPath);
			if(file.exists()) {
				fi = new FileInputStream(thumbnailPath);
				bo = new ByteArrayOutputStream();
				int len = 0;
				byte[] buf = new byte[1024];
				while((len = fi.read(buf)) != -1){
					bo.write(buf, 0 , len);
				}
				fileArray = bo.toByteArray();
				pMap.put("type", type);
				pMap.put("image", fileArray);
			} 
		}catch(Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if(fi != null) fi.close();
				if(bo != null) bo.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		return pMap;
	}
	

	public PMap getContentThumbnail(PMap pMap) {
		FileInputStream fi = null;
		ByteArrayOutputStream bo = null;
		byte[] fileArray = null;
		String type = "";
		try{
			File file;
			String thumbnail = dao.getContentThumbnail(pMap).get("thumbnail_img_name");
			String thumbnailPath = ROOT_PATH+"/"+ pMap.get("work_seq") +"/"+pMap.get("content_seq")+"/"+thumbnail;
			file = new File(thumbnailPath);
			type = thumbnail.substring(thumbnail.lastIndexOf("."));
			type = type.toLowerCase();
			if(file.exists()) {
				fi = new FileInputStream(thumbnailPath);
				bo = new ByteArrayOutputStream();
				int len = 0;
				byte[] buf = new byte[1024];
				while((len = fi.read(buf)) != -1){
					bo.write(buf, 0 , len);
				}
				fileArray = bo.toByteArray();
			} 
		}catch(Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if(fi != null) fi.close();
				if(bo != null) bo.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		pMap.put("image", fileArray);
		pMap.put("type", type);
		return pMap;
	}

}
