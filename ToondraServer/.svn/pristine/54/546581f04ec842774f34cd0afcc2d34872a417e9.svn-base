package kr.co.toondra.web.sample.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import kr.co.toondra.common.collection.PMap;
import kr.co.toondra.web.sample.service.SampleService;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.servlet.ModelAndView;


@Controller
@RequestMapping("/web/sample")
public class SampleController {
	
	
	@Autowired
	SampleService service;
	
	
	protected Logger logger = Logger.getLogger(this.getClass());	
	
	@RequestMapping(value="/sampleList")
	public String sampleList(HttpServletRequest request, Model model) throws Exception {
		logger.debug("[ST][/sampleList]");
//		model.addAttribute("data",service.insertList());
		logger.debug("[ED][/sampleList]");
		return "toondra/sample/sample";
	}
	
	
	@RequestMapping(value="/testDatatable")
	public String testDatatable(HttpServletRequest request, Model model) throws Exception {
		logger.debug("[ST][/testDatatable]");
//		model.addAttribute("data",service.insertList());
		
		
		PMap pMap = new PMap(request);
		
		pMap.put("iDisplayStart",0);
		pMap.put("iTotalRecords", 0);
		pMap.put("iTotalDisplayRecords", 0);
		pMap.put("iDisplayLength", 0);
		
		
		pMap.put("aaData", null);
		
		model.addAttribute(pMap);
		logger.debug("[ED][/testDatatable]");
		return "jacksonView";
	}
		
	@RequestMapping(value="/mailTest")
	public String mailTest(HttpServletRequest request, Model model) {
		
		service.sendEmail();
		
		return "jacksonView";
	}
	
	@RequestMapping(value="/upfileTest")
	public ModelAndView upfileTest2(HttpServletRequest request) {
		logger.debug("[ST][/upfileTest2]");
		
		
		
		logger.debug("[ED][/upfileTest2]");
		
		return new ModelAndView("toondra/sample/sample");
	}
	
	public ModelAndView upfileTest(HttpServletRequest request) {
		
		logger.debug("[ST][/upfileTest]");
		
		
		try{
			System.out.println("변환가능?");
			if(request instanceof MultipartHttpServletRequest){
				System.out.println("변환ok");
				MultipartHttpServletRequest multiRequest = (MultipartHttpServletRequest) request;
					    
				Iterator<String> fileNameList = multiRequest.getFileNames();
				
//				while(fileNameList.hasNext()){
					     
//					System.out.println("--next:"+fileNameList.next());
					List<MultipartFile> mFiles = multiRequest.getFiles(fileNameList.next());
					for(MultipartFile mFile : mFiles){
						System.out.println("original file name : " + mFile.getOriginalFilename());
					}
					/*
					String oriFileName = mFile.getOriginalFilename();	
					System.out.println("fileName : " +oriFileName);
					String fileExt = oriFileName.substring(oriFileName.lastIndexOf(".")+1);
					 
					fileExt = fileExt.toUpperCase();
					
					//local
					String filePath = "D:/img/";
					     
					//server
	//				String filePath = "/home/mrpark/upFile/";
					mFile.transferTo(new File(filePath + oriFileName));
					 */
//				}
		    
			}
		} catch(Exception ioe){
			System.out.println("업로드실패");
			ioe.printStackTrace();
		}
		
		
		
		logger.debug("[ED][/upfileTest]");
		
		
		return new ModelAndView("toondra/sample/sample"); 
	}
	
	@RequestMapping("/exelTest")
	public String exelTest(HttpServletRequest request, HttpServletResponse response, Model model) {
		logger.debug("[ST][/exelTest]");
		HashMap<String, Object> map = new HashMap<String, Object>();
		map.put("aaData", new ArrayList());
		model.addAllAttributes(map);
		logger.debug("[ED][/exelTest]");  
		  
		return "ExcelSampleView";
	}

	
}
