package kr.co.toondra.api.member.controller;

import java.util.HashMap;

import javax.servlet.http.HttpServletRequest;

import kr.co.toondra.api.common.controller.BaseController;
import kr.co.toondra.api.member.service.MemberService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

@RequestMapping("/api")
@Controller("apiMemberController")
public class MemberController extends BaseController {

	
	@Autowired
	private MemberService service;
	
	
	//회원가입
	@RequestMapping(value = "/member/join", method = RequestMethod.POST)
	public String memberJoin(@RequestParam HashMap<String, Object> param, Model model) throws Exception{

		model.addAttribute("result", service.insertMember(param));

		return JSON_VIEW;
	}
	
	
	//회원 인증
	@RequestMapping(value = "/member/confirm", method = RequestMethod.GET)
	public String memberConfirm(@RequestParam HashMap<String, Object> param, Model model) throws Exception{
		
		String result = "성공";
		
		if(service.updateMemberConfirm(param) == 0){
			result = "실패";
		}
		
		model.addAttribute("result",result);
		
		return "toondra_api/member/memberConfirm";
	}
	
	
	//로그인
	@RequestMapping(value = "/member/login", method = RequestMethod.POST)
	public String memberLogin(@RequestParam HashMap<String, Object> param, Model model) throws Exception{

		model.addAttribute("result", service.memberLogin(param));

		return JSON_VIEW;
	}
	
	//로그아웃
	@RequestMapping(value = "/member/logout", method = RequestMethod.PUT)
	public String memberLogout(@RequestParam HashMap<String, Object> param, Model model, HttpServletRequest request) throws Exception{

		model.addAttribute("result", service.updateMemberLogout(param, request));

		return JSON_VIEW;
	}
	
	
	//비밀번호 변경
	@RequestMapping(value = "/member/pw/change", method = RequestMethod.PUT)
	public String memberPwChange(@RequestParam HashMap<String, Object> param, Model model, HttpServletRequest request) throws Exception{

		model.addAttribute("result", service.updateMemberPwChange(param, request));

		return JSON_VIEW;
	}
	
	
	//비밀번호 찾기
	@RequestMapping(value = "/member/find/pw", method = RequestMethod.POST)
	public String memberFindPw(@RequestParam HashMap<String, Object> param, Model model) throws Exception{

		model.addAttribute("result", service.memberFindPw(param));

		return JSON_VIEW;
	}

	
	
}
